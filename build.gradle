/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
    }
}

apply plugin: 'java'
// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
	baseName = 'sample'
	version =  '0.0.1-SNAPSHOT'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-release'
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    compile(
		"org.springframework.boot:spring-boot-starter-web",
		"org.springframework.boot:spring-boot-starter-thymeleaf",
		"org.springframework.boot:spring-boot-devtools",
		"org.springframework.boot:spring-boot-starter-data-jpa",
		"com.h2database:h2",
		"org.projectlombok:lombok:1.16.0",
		"org.slf4j:slf4j-api:1.7.25",
		"ch.qos.logback:logback-classic:1.2.3",
		"ch.qos.logback:logback-core:1.2.3",
		"org.apache.commons:commons-lang3:3.3.2",
		"commons-io:commons-io:2.6",
		"com.opencsv:opencsv:4.2",
		"org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2",
		"com.google.code.findbugs:jsr305:3.0.2",
		"com.fasterxml.jackson.core:jackson-core:2.9.6"
	)
	
    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
	//testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile(
		'org.junit.jupiter:junit-jupiter-api:5.2.0',
		'org.springframework.boot:spring-boot-starter-test',
		'org.seleniumhq.selenium:selenium-java:3.13.0'
	)
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
	//useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}

	reports {
		html.enabled = true
	}
}
